env:
  browser: true
  es2021: true
  node: true

extends:
  - 'eslint:recommended'
  - 'plugin:react/recommended'
  - 'plugin:@typescript-eslint/recommended'
  - 'prettier'
  - 'plugin:prettier/recommended'

parser: '@typescript-eslint/parser'

parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: 12
  sourceType: module

plugins:
  - 'react'
  - 'react-hooks'
  - '@typescript-eslint'
  - 'prettier'
  - 'cypress'

settings:
  react:
    version: 'detect'

rules:
  # General ESLint rules
  'no-console': 'off'
  'no-debugger': 'warn'
  'no-unused-vars': 'off'
  'no-empty': ['error', { allowEmptyCatch: true }]
  'no-undef': 'off'
  'no-use-before-define': 'off'
  'no-restricted-imports':
    [
      'error',
      {
        paths:
          [
            {
              name: 'react',
              importNames: ['default'],
              message: "Please import from 'react/jsx-runtime' instead.",
            },
          ],
      },
    ]

  # React rules
  'react/jsx-uses-react': 'off'
  'react/react-in-jsx-scope': 'off'
  'react/prop-types': 'off'
  'react/display-name': 'off'
  'react-hooks/rules-of-hooks': 'error'
  'react-hooks/exhaustive-deps': 'warn'

  # TypeScript rules
  '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }]
  '@typescript-eslint/explicit-module-boundary-types': 'off'
  '@typescript-eslint/no-empty-interface': 'off'
  '@typescript-eslint/no-explicit-any': 'off'
  '@typescript-eslint/no-non-null-assertion': 'off'
  '@typescript-eslint/ban-types': 'off'
  '@typescript-eslint/no-use-before-define': ['error', { functions: false }]
  '@typescript-eslint/no-var-requires': 'off'
  '@typescript-eslint/explicit-function-return-type': 'off'
  '@typescript-eslint/consistent-type-imports':
    ['error', { prefer: 'type-imports' }]
