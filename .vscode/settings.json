{
  // Use ESLint as the default formatter for TypeScript/JavaScript
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  
  // Enable format on save
  "editor.formatOnSave": true,
  
  // Use ESLint to fix issues on save
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  
  // Disable VS Code's built-in TypeScript formatter to avoid conflicts
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  
  // ESLint configuration
  "eslint.enable": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "eslint.useFlatConfig": true,
  
  // Prettier configuration
  "prettier.enable": true,
  "prettier.requireConfig": true,
  
  // Disable conflicting formatters
  "typescript.format.enable": false,
  "javascript.format.enable": false,
  
  // File associations
  "files.associations": {
    "*.mjs": "javascript"
  }
}

